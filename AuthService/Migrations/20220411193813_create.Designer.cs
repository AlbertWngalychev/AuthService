// <auto-generated />
using System;
using AuthService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthService.Migrations
{
    [DbContext(typeof(AuthServiceContext))]
    [Migration("20220411193813_create")]
    partial class create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuthService.Models.Auth", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GUID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool?>("Active")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("active")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte[]>("HashedPass")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("binary(255)")
                        .HasColumnName("hashed_pass")
                        .IsFixedLength();

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("binary(1024)")
                        .HasColumnName("salt")
                        .IsFixedLength();

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("Guid");

                    b.ToTable("Auth", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
